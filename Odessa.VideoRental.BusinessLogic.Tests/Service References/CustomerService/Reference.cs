//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Odessa.VideoRental.BusinessLogic.Tests.CustomerService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CustomerService.ICustomerManagement")]
    public interface ICustomerManagement {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManagement/RegisterCustomer", ReplyAction="http://tempuri.org/ICustomerManagement/RegisterCustomerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Odessa.VideoRental.Messages.ExceptionFaultContract), Action="http://tempuri.org/ICustomerManagement/RegisterCustomerExceptionFaultContractFaul" +
            "t", Name="ExceptionFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Odessa.VideoRental.Messages")]
        Odessa.VideoRental.Messages.ResponseEnvelope<Odessa.VideoRental.Messages.Customer> RegisterCustomer(Odessa.VideoRental.Messages.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManagement/RegisterCustomer", ReplyAction="http://tempuri.org/ICustomerManagement/RegisterCustomerResponse")]
        System.Threading.Tasks.Task<Odessa.VideoRental.Messages.ResponseEnvelope<Odessa.VideoRental.Messages.Customer>> RegisterCustomerAsync(Odessa.VideoRental.Messages.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManagement/GetAllCustomers", ReplyAction="http://tempuri.org/ICustomerManagement/GetAllCustomersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Odessa.VideoRental.Messages.ExceptionFaultContract), Action="http://tempuri.org/ICustomerManagement/GetAllCustomersExceptionFaultContractFault" +
            "", Name="ExceptionFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Odessa.VideoRental.Messages")]
        Odessa.VideoRental.Messages.ResponseEnvelope<Odessa.VideoRental.Messages.Customer> GetAllCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManagement/GetAllCustomers", ReplyAction="http://tempuri.org/ICustomerManagement/GetAllCustomersResponse")]
        System.Threading.Tasks.Task<Odessa.VideoRental.Messages.ResponseEnvelope<Odessa.VideoRental.Messages.Customer>> GetAllCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManagement/RentMovie", ReplyAction="http://tempuri.org/ICustomerManagement/RentMovieResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Odessa.VideoRental.Messages.ExceptionFaultContract), Action="http://tempuri.org/ICustomerManagement/RentMovieExceptionFaultContractFault", Name="ExceptionFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Odessa.VideoRental.Messages")]
        Odessa.VideoRental.Messages.ResponseEnvelope<Odessa.VideoRental.Messages.MovieRentalItem> RentMovie(Odessa.VideoRental.Messages.MovieRentalItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManagement/RentMovie", ReplyAction="http://tempuri.org/ICustomerManagement/RentMovieResponse")]
        System.Threading.Tasks.Task<Odessa.VideoRental.Messages.ResponseEnvelope<Odessa.VideoRental.Messages.MovieRentalItem>> RentMovieAsync(Odessa.VideoRental.Messages.MovieRentalItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManagement/ReturnMovie", ReplyAction="http://tempuri.org/ICustomerManagement/ReturnMovieResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Odessa.VideoRental.Messages.ExceptionFaultContract), Action="http://tempuri.org/ICustomerManagement/ReturnMovieExceptionFaultContractFault", Name="ExceptionFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Odessa.VideoRental.Messages")]
        Odessa.VideoRental.Messages.ResponseEnvelope<Odessa.VideoRental.Messages.MovieRentalItem> ReturnMovie(Odessa.VideoRental.Messages.MovieRentalItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManagement/ReturnMovie", ReplyAction="http://tempuri.org/ICustomerManagement/ReturnMovieResponse")]
        System.Threading.Tasks.Task<Odessa.VideoRental.Messages.ResponseEnvelope<Odessa.VideoRental.Messages.MovieRentalItem>> ReturnMovieAsync(Odessa.VideoRental.Messages.MovieRentalItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManagement/GenerateBill", ReplyAction="http://tempuri.org/ICustomerManagement/GenerateBillResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Odessa.VideoRental.Messages.ExceptionFaultContract), Action="http://tempuri.org/ICustomerManagement/GenerateBillExceptionFaultContractFault", Name="ExceptionFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Odessa.VideoRental.Messages")]
        Odessa.VideoRental.Messages.ResponseEnvelope<Odessa.VideoRental.Messages.MovieRentalItem> GenerateBill(Odessa.VideoRental.Messages.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManagement/GenerateBill", ReplyAction="http://tempuri.org/ICustomerManagement/GenerateBillResponse")]
        System.Threading.Tasks.Task<Odessa.VideoRental.Messages.ResponseEnvelope<Odessa.VideoRental.Messages.MovieRentalItem>> GenerateBillAsync(Odessa.VideoRental.Messages.Customer customer);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomerManagementChannel : Odessa.VideoRental.BusinessLogic.Tests.CustomerService.ICustomerManagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerManagementClient : System.ServiceModel.ClientBase<Odessa.VideoRental.BusinessLogic.Tests.CustomerService.ICustomerManagement>, Odessa.VideoRental.BusinessLogic.Tests.CustomerService.ICustomerManagement {
        
        public CustomerManagementClient() {
        }
        
        public CustomerManagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerManagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerManagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Odessa.VideoRental.Messages.ResponseEnvelope<Odessa.VideoRental.Messages.Customer> RegisterCustomer(Odessa.VideoRental.Messages.Customer customer) {
            return base.Channel.RegisterCustomer(customer);
        }
        
        public System.Threading.Tasks.Task<Odessa.VideoRental.Messages.ResponseEnvelope<Odessa.VideoRental.Messages.Customer>> RegisterCustomerAsync(Odessa.VideoRental.Messages.Customer customer) {
            return base.Channel.RegisterCustomerAsync(customer);
        }
        
        public Odessa.VideoRental.Messages.ResponseEnvelope<Odessa.VideoRental.Messages.Customer> GetAllCustomers() {
            return base.Channel.GetAllCustomers();
        }
        
        public System.Threading.Tasks.Task<Odessa.VideoRental.Messages.ResponseEnvelope<Odessa.VideoRental.Messages.Customer>> GetAllCustomersAsync() {
            return base.Channel.GetAllCustomersAsync();
        }
        
        public Odessa.VideoRental.Messages.ResponseEnvelope<Odessa.VideoRental.Messages.MovieRentalItem> RentMovie(Odessa.VideoRental.Messages.MovieRentalItem item) {
            return base.Channel.RentMovie(item);
        }
        
        public System.Threading.Tasks.Task<Odessa.VideoRental.Messages.ResponseEnvelope<Odessa.VideoRental.Messages.MovieRentalItem>> RentMovieAsync(Odessa.VideoRental.Messages.MovieRentalItem item) {
            return base.Channel.RentMovieAsync(item);
        }
        
        public Odessa.VideoRental.Messages.ResponseEnvelope<Odessa.VideoRental.Messages.MovieRentalItem> ReturnMovie(Odessa.VideoRental.Messages.MovieRentalItem item) {
            return base.Channel.ReturnMovie(item);
        }
        
        public System.Threading.Tasks.Task<Odessa.VideoRental.Messages.ResponseEnvelope<Odessa.VideoRental.Messages.MovieRentalItem>> ReturnMovieAsync(Odessa.VideoRental.Messages.MovieRentalItem item) {
            return base.Channel.ReturnMovieAsync(item);
        }
        
        public Odessa.VideoRental.Messages.ResponseEnvelope<Odessa.VideoRental.Messages.MovieRentalItem> GenerateBill(Odessa.VideoRental.Messages.Customer customer) {
            return base.Channel.GenerateBill(customer);
        }
        
        public System.Threading.Tasks.Task<Odessa.VideoRental.Messages.ResponseEnvelope<Odessa.VideoRental.Messages.MovieRentalItem>> GenerateBillAsync(Odessa.VideoRental.Messages.Customer customer) {
            return base.Channel.GenerateBillAsync(customer);
        }
    }
}
